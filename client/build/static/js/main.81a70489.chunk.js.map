{"version":3,"sources":["reportWebVitals.js","Components/Home.jsx","Components/Forecast.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Home","className","method","action","type","placeholder","name","CurrentWeather","props","state","isLoading","currentTemp","humidity","wind","windDirection","currentCondition","currentConditionDescription","weatherIcon","cityName","cityNotFound","fetch","res","json","data","setState","Math","round","main","temp","speed","deg","weather","description","catch","err","console","log","WeatherCardError","to","WeatherConditions","this","CurrentWeatherCard","Component","ReactDOM","render","exact","path","component","Forecast","document","getElementById"],"mappings":"kPAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCiBCQ,EAtBF,WAEV,OACG,sBAAKC,UAAU,iCAAf,UACG,qBAAKA,UAAU,SAAf,SACG,oDAEH,uBACA,qBAAKA,UAAU,eAAf,SACG,iHAGH,qBAAKA,UAAU,YAAf,SACN,uBAAMC,OAAO,OAAOC,OAAO,mBAA3B,UACG,uBAAOC,KAAK,OAAOC,YAAY,eAAeC,KAAK,SACnD,oD,gCCqESC,E,kDAlFd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAEEC,MAAS,CACXC,WAAW,EACXC,YAAa,GACbC,SAAU,GACVC,KAAM,GACNC,cAAe,GACfC,iBAAkB,GAClBC,4BAA6B,GAC7BC,YAAa,GACbC,SAAU,GACVC,aAAc,IAbF,E,qDAiBnB,WAAqB,IAAD,OACnBC,MAAM,4BACL1B,MAAK,SAAA2B,GAAG,OAAIA,EAAIC,UAChB5B,MAAK,SAAA6B,GACA,EAAKC,SAAS,CACXd,WAAW,EACXC,YAAac,KAAKC,MAAMH,EAAKA,KAAKI,KAAKC,MAAQ,OAC/ChB,SAAUW,EAAKA,KAAKI,KAAKf,SAAW,IACpCC,KAAMY,KAAKC,MAAMH,EAAKA,KAAKV,KAAKgB,OAAS,OACzCf,cAAeS,EAAKA,KAAKV,KAAKiB,IAC9Bf,iBAAkBQ,EAAKA,KAAKQ,QAAQ,GAAGJ,KACvCX,4BAA6BO,EAAKA,KAAKQ,QAAQ,GAAGC,YAClDd,SAAUK,EAAKA,KAAKjB,UAI5B2B,OAAM,SAAAC,GACJC,QAAQC,IAAIF,Q,oBAIhB,WACC,IAAMG,EACH,qBAAKpC,UAAU,uBAAf,SACE,sBAAKA,UAAU,mBAAf,UACM,qFACH,cAAC,IAAD,CAAMqC,GAAG,IAAT,SAAa,sDAKfC,EACuB,MAA5BC,KAAK/B,MAAMU,aAAuB,oCAAQkB,EAAR,OAClC,gCACG,qBAAKpC,UAAU,UAAf,SACG,cAAC,IAAD,CAAMqC,GAAG,IAAT,SAAa,8CAEhB,sBAAKrC,UAAU,uBAAf,UACG,sBAAKA,UAAU,cAAf,UACF,sBAAKA,UAAU,qBAAf,UACG,4BAAIuC,KAAK/B,MAAME,cACf,4BAAI6B,KAAK/B,MAAMO,iCAElB,sBAAKf,UAAU,mBAAf,UACG,2CAAcuC,KAAK/B,MAAMG,SAAzB,OACA,6CAAgB4B,KAAK/B,MAAMI,KAA3B,aAGF,8CAAiB2B,KAAK/B,MAAMS,SAA5B,aAKAuB,EACH,oCAAOF,EAAP,OAGH,OACG,8BACWE,Q,GA7EaC,aCQ7BC,IAASC,OACR,eAAC,IAAD,WACG,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/C,IACjC,cAAC,IAAD,CAAO6C,OAAK,EAACC,KAAK,mBAAmBC,UAAWC,OAGlDC,SAASC,eAAe,SAM1B3D,M","file":"static/js/main.81a70489.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst Home = () => {\n\n   return (\n      <div className=\"container col-md-8 text-center\">\n         <div className='header'>\n            <h2>Weather Forecast</h2>\n         </div>\n         <br />\n         <div className=\"instructions\">\n            <p>Enter a US zip code below to get the current weather conditions for that area.</p>\n         </div>\n\n         <div className='cityInput'>\n\t  <form method='POST' action='/search-location'>\n\t     <input type='text' placeholder='Enter city..' name='city'/>\n\t     <button>ENTER</button>\n\t  </form>\n         </div>\n      </div>\n   )\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass CurrentWeather extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t   this.state = ({\n\t\t      isLoading: true,\n\t\t      currentTemp: '',\n\t\t      humidity: '',\n\t\t      wind: '',\n\t\t      windDirection: '',\n\t\t      currentCondition: '',\n\t\t      currentConditionDescription: '',\n\t\t      weatherIcon: '',\n\t\t      cityName: '',\n\t\t      cityNotFound: ''\n\t\t   })\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('/search-location-weather')\n\t\t.then(res => res.json())\n\t\t.then(data => {\n\t\t\t     this.setState({\n\t\t\t        isLoading: false,\n\t\t\t        currentTemp: Math.round(data.data.main.temp) + 'Â°',\n\t\t\t        humidity: data.data.main.humidity + '%',\n\t\t\t        wind: Math.round(data.data.wind.speed) + ' mph',\n\t\t\t        windDirection: data.data.wind.deg,\n\t\t\t        currentCondition: data.data.weather[0].main,\n\t\t\t        currentConditionDescription: data.data.weather[0].description,\n\t\t\t        cityName: data.data.name\n\t\t\t     });\n\t\t\t}\n\t\t)\n\t\t.catch(err => {\n\t\t   console.log(err);\n\t\t})\t\n\t}\n\n\trender() {\n\t\tconst WeatherCardError = (\n\t\t   <div className='weatherCardContainer'>\n\t\t     <div className='weatherCardError'>\n\t\t           <p> Whoa! Looks like there was an error with your city.</p>\n\t\t        <Link to='/'><button>Try Again</button></Link>\n\t\t     </div>\n\t\t   </div>\n\t\t)\n\n\t\tconst WeatherConditions = (\n\t\t\tthis.state.cityNotFound === 404 ? <div> { WeatherCardError } </div> :\n\t\t\t<div>\n\t\t\t   <div className='homeBtn'>\n\t\t\t\t     <Link to='/'><button>Home</button></Link>\n\t\t\t   </div>\n\t\t\t   <div className='weatherCardContainer'>\n\t\t\t      <div className='weatherCard'>\n\t\t\t\t   <div className='conditionsOverview'>\n\t\t\t\t      <p>{this.state.currentTemp}</p>\n\t\t\t\t      <p>{this.state.currentConditionDescription}</p>\n\t\t\t\t   </div>\n\t\t\t\t   <div className='conditionDetails'>\n\t\t\t\t      <p>Humidity: {this.state.humidity} </p>\n\t\t\t\t      <p>Wind Speed: {this.state.wind} </p>\n\t\t\t\t   </div>\n\t\t\t      </div> \n\t\t\t     <h4> Location | {this.state.cityName} </h4>\n\t\t\t   </div>\n\t\t\t</div>\n\t\t)\n\n\t\tconst CurrentWeatherCard = ( \n\t\t   <div> {WeatherConditions} </div>\n\t\t)\n\n\t\treturn (\n\t\t   <div>\n\t             { CurrentWeatherCard }\n\t\t   </div>\n\t\t)\n\t}\n}\n\nexport default CurrentWeather;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {BrowserRouter as Router, Route } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nimport Home from './Components/Home';\nimport Forecast from './Components/Forecast';\n\nReactDOM.render(\n\t<Router>\n\t\t  <Route exact path='/' component={Home}/>\n\t\t  <Route exact path='/current-weather' component={Forecast}/>\n\t\t  {/* <Route exact path='/error' component={ErrorDisplay}/> */}\n\t</Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}